Renaming or Relocating a Data File via Control File and OS Commands

1. Create a trace file that contains a CREATE CONTROLFILE statement

SQL> alter database backup controlfile to trace as 'c:\paso\move_files.sql' noresetlogs;

the output file is:

-- The following are current System-scope REDO Log Archival related
-- parameters and can be included in the database initialization file.
--
-- LOG_ARCHIVE_DEST=''
-- LOG_ARCHIVE_DUPLEX_DEST=''
--
-- LOG_ARCHIVE_FORMAT=ARC%S_%R.%T
--
-- DB_UNIQUE_NAME="orcl12c"
--
-- LOG_ARCHIVE_CONFIG='SEND, RECEIVE, NODG_CONFIG'
-- LOG_ARCHIVE_MAX_PROCESSES=4
-- STANDBY_FILE_MANAGEMENT=MANUAL
-- STANDBY_ARCHIVE_DEST=%ORACLE_HOME%\RDBMS
-- FAL_CLIENT=''
-- FAL_SERVER=''
--
-- LOG_ARCHIVE_DEST_1='LOCATION=USE_DB_RECOVERY_FILE_DEST'
-- LOG_ARCHIVE_DEST_1='MANDATORY NOREOPEN NODELAY'
-- LOG_ARCHIVE_DEST_1='ARCH NOAFFIRM NOVERIFY SYNC'
-- LOG_ARCHIVE_DEST_1='NOREGISTER NOALTERNATE NODEPENDENCY'
-- LOG_ARCHIVE_DEST_1='NOMAX_FAILURE NOQUOTA_SIZE NOQUOTA_USED NODB_UNIQUE_NAME'
-- LOG_ARCHIVE_DEST_1='VALID_FOR=(PRIMARY_ROLE,ONLINE_LOGFILES)'
-- LOG_ARCHIVE_DEST_STATE_1=ENABLE

--
-- The following commands will create a new control file and use it
-- to open the database.
-- Data used by Recovery Manager will be lost.
-- Additional logs may be required for media recovery of offline
-- Use this only if the current versions of all online logs are
-- available.

-- After mounting the created controlfile, the following SQL
-- statement will place the database in the appropriate
-- protection mode:
--  ALTER DATABASE SET STANDBY DATABASE TO MAXIMIZE PERFORMANCE

--STARTUP NOMOUNT
CREATE CONTROLFILE REUSE DATABASE "ORCL12C" NORESETLOGS  NOARCHIVELOG
    MAXLOGFILES 16
    MAXLOGMEMBERS 3
    MAXDATAFILES 1024
    MAXINSTANCES 8
    MAXLOGHISTORY 292
LOGFILE
  GROUP 1 'C:\ORACLE12C\ORADATA\ORCL12C\REDO01.LOG'  SIZE 50M BLOCKSIZE 512,
  GROUP 2 'C:\ORACLE12C\ORADATA\ORCL12C\REDO02.LOG'  SIZE 50M BLOCKSIZE 512,
  GROUP 3 'C:\ORACLE12C\ORADATA\ORCL12C\REDO03.LOG'  SIZE 50M BLOCKSIZE 512
-- STANDBY LOGFILE
DATAFILE
  'C:\ORACLE12C\ORADATA\ORCL12C\SYSTEM01.DBF',
  'C:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\SYSTEM01.DBF',
  'C:\ORACLE12C\ORADATA\ORCL12C\SYSAUX01.DBF',
  'C:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\SYSAUX01.DBF',
  'C:\ORACLE12C\ORADATA\ORCL12C\UNDOTBS01.DBF',
  'C:\ORACLE12C\ORADATA\ORCL12C\USERS01.DBF',
  'C:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\SYSTEM01.DBF',
  'C:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\SYSAUX01.DBF',
  'C:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\PDBORCL_USERS01.DBF'
CHARACTER SET WE8MSWIN1252
;

-- Commands to re-create incarnation table
-- Below log names MUST be changed to existing filenames on
-- disk. Any one log file from each branch can be used to
-- re-create incarnation records.
-- ALTER DATABASE REGISTER LOGFILE 'C:\ORACLE12C\RECOVERY_AREA\ORCL12C\ARCHIVELOG\2015_10_01\O1_MF_1_1_%U_.ARC';
-- ALTER DATABASE REGISTER LOGFILE 'C:\ORACLE12C\RECOVERY_AREA\ORCL12C\ARCHIVELOG\2015_10_01\O1_MF_1_1_%U_.ARC';
-- Recovery is required if any of the datafiles are restored backups,
-- or if the last shutdown was not normal or immediate.
--RECOVER DATABASE


-- Database can now be opened normally.
ALTER DATABASE OPEN;

-- Open all the PDBs.
ALTER PLUGGABLE DATABASE ALL OPEN;


-- Commands to add tempfiles to temporary tablespaces.
-- Online tempfiles have complete space information.
-- Other tempfiles may require adjustment.
ALTER TABLESPACE TEMP ADD TEMPFILE 'C:\ORACLE12C\ORADATA\ORCL12C\TEMP01.DBF'
     SIZE 62914560  REUSE AUTOEXTEND ON NEXT 655360  MAXSIZE 32767M;
ALTER SESSION SET CONTAINER = PDB$SEED;
ALTER TABLESPACE TEMP ADD TEMPFILE 'C:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\PDBSEED_TEMP012015-09-30_01-38-53-PM.DBF'
     SIZE 20971520  REUSE AUTOEXTEND ON NEXT 655360  MAXSIZE 32767M;
ALTER SESSION SET CONTAINER = PDBORCL;
ALTER TABLESPACE TEMP ADD TEMPFILE 'C:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\PDBSEED_TEMP012015-09-30_01-38-53-PM.DBF' REUSE;
ALTER SESSION SET CONTAINER = CDB$ROOT;
-- End of tempfile additions.
--


2. Next, edit the c:\paso\move_files.sql file, and change the names of the directory paths to the new locations. Here is a
CREATE CONTROLFILE statement for this example:

  'D:\ORACLE12C\ORADATA\ORCL12C\SYSTEM01.DBF',
  'D:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\SYSTEM01.DBF',
  'D:\ORACLE12C\ORADATA\ORCL12C\SYSAUX01.DBF',
  'D:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\SYSAUX01.DBF',
  'D:\ORACLE12C\ORADATA\ORCL12C\UNDOTBS01.DBF',
  'D:\ORACLE12C\ORADATA\ORCL12C\USERS01.DBF',
  'D:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\SYSTEM01.DBF',
  'D:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\SYSAUX01.DBF',
  'D:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\PDBORCL_USERS01.DBF'
  
and the pluggable  datafiles

ALTER TABLESPACE TEMP ADD TEMPFILE 'D:\ORACLE12C\ORADATA\ORCL12C\TEMP01.DBF'
     SIZE 62914560  REUSE AUTOEXTEND ON NEXT 655360  MAXSIZE 32767M;
ALTER SESSION SET CONTAINER = PDB$SEED;
ALTER TABLESPACE TEMP ADD TEMPFILE 'D:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\PDBSEED_TEMP012015-09-30_01-38-53-PM.DBF'
     SIZE 20971520  REUSE AUTOEXTEND ON NEXT 655360  MAXSIZE 32767M;
ALTER SESSION SET CONTAINER = PDBORCL;
ALTER TABLESPACE TEMP ADD TEMPFILE 'D:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\PDBSEED_TEMP012015-09-30_01-38-53-PM.DBF' REUSE;


2.  Now, shut down the database:

	SQL> shutdown immediate;
	
	Physically move the files from the OS prompt.
	
	c:\move  C:\ORACLE12C\ORADATA\ORCL12C\SYSTEM01.DBF D:\ORACLE12C\ORADATA\ORCL12C\SYSTEM01.DBF
    c:\move  C:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\SYSTEM01.DBF D:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\SYSTEM01.DBF
    c:\move  C:\ORACLE12C\ORADATA\ORCL12C\SYSAUX01.DBF  D:\ORACLE12C\ORADATA\ORCL12C\SYSAUX01.DBF
    c:\move  C:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\SYSAUX01.DBF D:\ORACLE12C\ORADATA\ORCL12C\PDBSEED\SYSAUX01.DBF
    c:\move  C:\ORACLE12C\ORADATA\ORCL12C\UNDOTBS01.DBF D:\ORACLE12C\ORADATA\ORCL12C\UNDOTBS01.DBF
    c:\move  C:\ORACLE12C\ORADATA\ORCL12C\USERS01.DBF D:\ORACLE12C\ORADATA\ORCL12C\USERS01.DBF
    c:\move  C:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\SYSTEM01.DBF D:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\SYSTEM01.DBF
    c:\move  C:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\SYSAUX01.DBF D:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\SYSAUX01.DBF
    c:\move  C:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\PDBORCL_USERS01.DBF D:\ORACLE12C\ORADATA\ORCL12C\PDBORCL\PDBORCL_USERS01.DBF
    
    where D is another unit physical drive disk
    
3. Start up the database in nomount mode:

	SQL> startup nomount;
	Then, execute the file that contains the CREATE CONTROLFILE statement (in this example,c:\paso\move_files.sql):    
	
	SQL> @move_files.sql
	If the statement is successful, you see the following message:
	
	Control file created and tha  database is open.